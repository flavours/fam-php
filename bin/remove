#!/usr/bin/env php
<?php

require("/fam-php/vendor/autoload.php");

use Symfony\Component\Yaml\Yaml;
use Symfony\Component\Yaml\Exception\ParseException;

const FLAVOUR_FILE = 'app.flavour';

function remove() : int
{
    $addon = Yaml::parse(stream_get_contents(STDIN));
    return remove_requirement($addon, (isset($yaml['install']['mode']) && $yaml['install']['mode'] == "dev"));
}

function remove_requirement($addon, $devmode=false) : int
{
    $yaml = Yaml::parse(file_get_contents(FLAVOUR_FILE));
    $requirement = explode(":", $addon['install']['package'])[0];
    $identifier = $addon['meta']['name'] .":". $addon['meta']['version'];


    if (!array_key_exists($identifier, $yaml['addons']))  {
        throw new \Exception("Requirement ${requirement} non-existent! ");
        return 1;
    }


    $command = [
        "composer",
        "remove",
        "--no-update",
       $requirement,
    ];

    if ($devmode) {
        $command[] = "--dev";
    }

    exec(implode(" ", $command), $output, $response);

    if ($response > 0) {
        throw new \Exception("Requirement ${requirement} could not be removed! ");
        return 2;
    }

    unset($yaml['addons'][$identifier]);
    if(count($yaml['addons']) == 0)
        unset($yaml['addons']);
    file_put_contents(FLAVOUR_FILE, Yaml::dump($yaml, 4));

    return 0;
}

exit(remove());
